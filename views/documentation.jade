extends layout

prepend title
  page_title = "REST API Documentation"

append styles
  link(rel="stylesheet",href="/css/prettify.css")

append scripts
  script(src="/js/prettify.min.js")
  script
    $(function(){prettyPrint();});

append content
  div.page-header
    h1 Plunker Documentation

  div.row
    div.span12
      :markdown
        ## Plunker
        
        Plunker is a website and RESTful API for creating, previewing and sharing web snippets online.
        
        ### What is a plunk?
        
        A *plunk* is a web snippet that is composed of an arbitrary number of files that can be viewed online through the Plunker service. Each plunk has:
        
        * **description** (optional) This should be a short description of what the plunk represents
        * **index** (optional) This is the filename of the *main* file of the plunk. For  example, this would be 'index.html' for a typical web snippet.
        * **expires** (optional) This is the time (formatted per ISO 8601) that the plunk should expire. Plunks that expire are considered *private* and will not appear on the landing page. For example: the preview functionality of the editor uses plunks with short expiry times to run the previews.                                                                                                                 
        * **files** (required) This is a hash that maps filenames to their description.
        
        #### Plunk files
        
        Each file in the plunk can be presented to the API in either the short or long form.
        
        * **short-form** In this form, the file entry is a mapping of the file to its contents. For example:
        
                {
                  "index.html": "<html></html>"
                }
        
        * **long-form** In this form, the file entry is a mapping of the file to a hash representing the file. All file entries returned by the API will be in long-form.
        
                {
                  "index.html": {
                    "filename": "index.html",
                    "content": "<html></html>"
                  }
                }
        
        ### What is so cool about Plunker?
        
        Many other amazing online services impose certain restrictions on the composition of their snippets. For example, services will typically enforce that each snippet has one html file, one css file and one javascript file. **What if you want two javascript files?!**
        
        Plunker is neat because it enables more creativity and flexibility in the definition of what can be in plunks.
        
        * Do you want a json file that's loaded over XHR? *OK, no problem!*
        * Do you want to load coffee-script, less, stylus or handlebars templates from the client-side? *Have at it!*
        
        ### Running Plunker
        
        Running Plunker locally is really easy. You only need to have node.js and npm installed to get started.
        
            git clone https://ggoodman@github.com/ggoodman/stsh.git
            cd stsh
            npm install
            node server.js
        
        There is no configuration necessary and Plunker runs without any sort of backend database. Note that plunks will be saved to and restored from `/tmp/plunks.json`. For the save/restore feature to work, the user running Plunker must have read/write access to `/tmp`.

  div.row
    div.span12
      h2 RESTful API
      h3 Create a plunk

      p: code POST /plunks

      h4 Input
      dl
        dt description
        dd
          em Optional
          | &nbsp;
          strong  String

        dt index
        dd
          em Optional
          | &nbsp;
          strong  String
        dd The default file to be served when a user navigates to the plunk.
        dd Defaults to <em>index.html</em> if the file is provided otherwise an arbitrary file.

        dt files
        dd
          em Required
          | &nbsp;
          strong hash
        dd Files are listed as a hash of filename => content

      pre.prettyprint.language-js.
        {
          "description": "Optional description of the plunk",
          "index": "index.html",
          "files": {
            "index.html": "<link rel=\\"stylesheet\\" href=\\"style/style.css\\" /><h1>Header</h1><p>If the header above is red, that means that both this file (index.html) and the stylesheet (style.css) were property served by plunker.</p>",
            "style/style.css": "h1 { color: red; }"
          }
        }

      h4 Response

      pre.headers.
        HTTP/1.1 201 Created
      pre.body.prettyprint.language-js.
        {
          "created_at": "2012-02-16T22:28:27.424Z",
          "expires": "2012-02-18T22:28:27.424Z",
          "token": "cnAF8G3sY5fXBuUd",
          "files": {
            "style/style.css": {
              "url": "http://plunker.no.de/api/v1/plunks/SJUZAQ/style/style.css",
              "filename": "style/style.css",
              "content": "h1 { color: red; }",
              "html_url": "http://plunker.no.de/SJUZAQ/style/style.css",
              "mime": "text/css"
            },
            "index.html": {
              "url": "http://plunker.no.de/api/v1/plunks/SJUZAQ/index.html",
              "filename": "index.html",
              "content": "<link rel=\\"stylesheet\\" href=\\"style/style.css\\" /><h1>Header</h1><p>If the header above is red, that means that both this file (index.html) and the stylesheet (style.css) were property served by plunker.</p>",
              "html_url": "http://plunker.no.de/SJUZAQ/index.html",
              "mime": "text/html"
            }
          },
          "url": "http://plunker.no.de/api/v1/plunks/SJUZAQ",
          "id": "SJUZAQ",
          "index": "index.html",
          "description": "Optional description of the plunk",
          "html_url": "http://plunker.no.de/SJUZAQ/"
        }
      h3 Read a plunk

      p: code GET /plunks/0xF5qW

      h4 Response

      pre.headers.
        HTTP/1.1 200 OK
      pre.body.prettyprint.language-js.
        {
          "created_at": "2012-02-16T22:28:27.424Z",
          "expires": "2012-02-18T22:28:27.424Z",
          "files": {
            "style/style.css": {
              "url": "http://plunker.no.de/api/v1/plunks/SJUZAQ/style/style.css",
              "filename": "style/style.css",
              "content": "h1 { color: red; }",
              "html_url": "http://plunker.no.de/SJUZAQ/style/style.css",
              "mime": "text/css"
            },
            "index.html": {
              "url": "http://plunker.no.de/api/v1/plunks/SJUZAQ/index.html",
              "filename": "index.html",
              "content": "<link rel=\"stylesheet\" href=\"style/style.css\" /><h1>Header</h1><p>If the header above is red, that means that both this file (index.html) and the stylesheet (style.css) were property served by plunker.</p>",
              "html_url": "http://plunker.no.de/SJUZAQ/index.html",
              "mime": "text/html"
            }
          },
          "url": "http://plunker.no.de/api/v1/plunks/SJUZAQ",
          "id": "SJUZAQ",
          "index": "index.html",
          "description": "Optional description of the plunk",
          "html_url": "http://plunker.no.de/SJUZAQ/"
        }
      h3 Update a plunk

      p: code POST /plunks/0xF5qW

      h4 Input
      dl
        dt description
        dd
          em Optional
          | &nbsp;
          strong  String

        dt index
        dd
          em Optional
          | &nbsp;
          strong  String
        dd The default file to be served when a user navigates to the plunk.
        dd Defaults to <em>index.html</em> if the file is provided otherwise an arbitrary file.

        dt files
        dd
          em Optional
          | &nbsp;
          strong hash
        dd New files and modifications to existing files can be specified in the same way as creating a plunk (filename => content)
        dd However, to rename files each record in the file hash should be a mapping of filename => a hash as outlined below:
          dl
            dt filename
            dd
              em Optional
              | &nbsp;
              strong String
            dd The new filename to use for this file

            dt content
            dd
              em Optional
              | &nbsp;
              strong String

      pre.prettyprint.language-js.
        {
          "description": "Rename index.html to main.html",
          "index": "main.html",
          "files": {
            "index.html": {
              "filename": "main.html"
            },
          }
        }

      h4 Response

      pre.headers.
        HTTP/1.1 200 OK
      pre.body.prettyprint.language-js.
        {
          "created_at": "2012-02-16T22:28:27.424Z",
          "expires": "2012-02-18T22:28:27.424Z",
          "token": "cnAF8G3sY5fXBuUd",
          "files": {
            "style/style.css": {
              "url": "http://plunker.no.de/api/v1/plunks/SJUZAQ/style/style.css",
              "filename": "style/style.css",
              "content": "h1 { color: red; }",
              "html_url": "http://plunker.no.de/SJUZAQ/style/style.css",
              "mime": "text/css"
            },
            "main.html": {
              "url": "http://plunker.no.de/api/v1/plunks/SJUZAQ/main.html",
              "filename": "main.html",
              "content": "<link rel=\\"stylesheet\\" href=\\"style/style.css\\" /><h1>Header</h1><p>If the header above is red, that means that both this file (index.html) and the stylesheet (style.css) were property served by plunker.</p>",
              "html_url": "http://plunker.no.de/SJUZAQ/main.html",
              "mime": "text/html"
            }
          },
          "url": "http://plunker.no.de/api/v1/plunks/SJUZAQ",
          "id": "SJUZAQ",
          "index": "main.html",
          "description": "Rename index.html to main.html",
          "html_url": "http://plunker.no.de/SJUZAQ/"
        }
      h3 Delete a plunk

      p: code DELETE /plunks/0xF5qW

      h4 Response

      pre.headers.no-response.
        HTTP/1.1 204 No content
